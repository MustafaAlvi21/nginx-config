Openssl req -newkey rsa:2048 -nodes -keyout cryptosharksnft.io.key -out cryptosharksnft.io.csr

openssl req -new -newkey rsa:2048 -nodes -keyout cryptosharksnft.io.key -out cryptosharksnft.io.csr



Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password: Sebastian789


-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------

[22:12] [server1.cryptosharksnft.io src] # openssl req -new -newkey rsa:2048 -nodes -keyout cryptosharksnft.io.key -out cryptosharksnft.io.csr
Generating a RSA private key
......................................................+++++
.............+++++
writing new private key to 'cryptosharksnft.io.key'
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:NZ
State or Province Name (full name) [Some-State]:Auckland
Locality Name (eg, city) []:Hamilton
Organization Name (eg, company) [Internet Widgits Pty Ltd]:mySharks
Organizational Unit Name (eg, section) []:cryptosharksnft
Common Name (e.g. server FQDN or YOUR name) []:cryptosharksnft.io
Email Address []:

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:Sebastian789
An optional company name []:mySharks
[22:17] [server1.cryptosharksnft.io src] #

-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------

cat cryptosharksnft.io.crt intermediate.crt > cryptosharksnft.io.chained.crt

ssl_certificate /etc/nginx/ssl/cryptosharksnft.io.chained.crt 
ssl_certificate_key /etc/nginx/ssl/cryptosharksnft.io.key


cat 1102745548fb0bd5.crt gd_bundle-g2-g1.crt > new_cryptosharksnft.io.chained.crt
  

# -------------------------------------
#           steps to add SSL          
# -------------------------------------

GUIDES: 
    => https://www.cipheronic.com/ssl_certificate_nginx/
    => https://marcosantonocito.medium.com/steps-to-install-a-go-daddy-ssl-certificate-on-nginx-on-ubuntu-14-04-ff942b9fd7ff
steps:

1) server pay domain ki key or csr file generate kerna
    => mkdir /etc/nginx/new_ssl/
    => cd /etc/nginx/new_ssl/
    => openssl req -new -newkey rsa:2048 -nodes -keyout domain.io.key -out domain.io.csr 

    Note: Common Name main domain.io aai ga or jb key and csr generate hogai hogi 

2) goto goDaddy SSL page "https://ssl-ccp.godaddy.com/cert/details/btm0hz9hmymv5oigvk0fvnr7vi50q9um?reissue=success"
    => Re-Key your certificate
    => paste generated csr 
    => submit all changes
    => wait 2 mint main page refreseh kerro 
    => Status: 'Certificate issued'
    => download certificate (server type: Apache)

3) Extract and upload two files 
    => e.g. 1102745548fb0bd5.crt
    => e.g. gd_bundle-g2-g1.crt

4) update nginx config "nano /etc/nginx/sites-available/default"
    

server {
        #listen 80 default_server;
        #listen [::]:80 default_server;

        # SSL configuration
        #
         listen 443 ssl default_server;
         listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;


        #ssl_certificate  /etc/nginx/mySSL/cryptosharksnft.csr;
        #ssl_certificate_key /etc/nginx/mySSL/cryptosharksnft.key;

        ssl_certificate /etc/nginx/new_ssl/new_cryptosharksnft.io.chained.crt;
        ssl_certificate_key /etc/nginx/ssl/cryptosharksnft.io.key;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name cryptosharksnft.io www.cryptosharksnft.io;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }

        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
}



server{

    listen 80 default_server;


    server_name cryptosharksnft.io www.cryptosharksnft.io;


    return 301 https://cryptosharksnft.io;

}


5) nginx -t
    => nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    => nginx: configuration file /etc/nginx/nginx.conf test is successful

6) sudo service nginx restart
    => abh SSL connect hogaya hoga or sath hi http to https redirection bhi hogai hogi.